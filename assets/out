#!/bin/bash
# vim: set ft=sh

set -e

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

base_dir=$1

source $(dirname $0)/common.sh

from=$(jq -r '.params.from // ""' < $payload)
if [ -z "$from" ]
then
  echo "invalid payload (missing 'from' parameter):" >&2
  cat $payload >&2
  exit 1
fi

if [ -z "$base_dir" ]; then
  echo "usage: $0 <path/to/base/dir>" >&2
  exit 1
fi
cd $base_dir

cd $from

all_keys=()
for key in "${keys[@]}"
do
  matching_keys=($key)
  all_keys+=(${matching_keys[@]})
done

if [[ "${#all_keys[@]}" -eq 0 ]]
then
  new_ref="0"
else
  all_keys=($(printf "%s\n" "${all_keys[@]}" | sort -u))
  for key in "${all_keys[@]}"
  do
    result="$(eval "redis-cli -x $connect_opts set '${key}' < '$key'")"
    if [[ "$result" != 'OK' ]]
    then
      echo "could not write key '$key' to '${host}:${port}' database $dbnum:" >&2
      echo "$result" >&2
      exit 1
    fi
  done
  # TODO: This needs to be protected from keys that contain exceptional characters
  new_ref="$(calc_reference)"
fi

jq -n "{
  \"version\": {\"ref\": \"$new_ref\"},
  \"metadata\": $(key_metadata)
}" >&3
